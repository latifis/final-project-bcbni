server.port=8082
spring.datasource.url=jdbc:postgresql://localhost:5432/users
spring.datasource.username=postgres
spring.datasource.password=12345678
spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Config Kafka
app.topic=finalprojectfix
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.groupId=bni46Group
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=bni46Group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

# EUREKA
spring.application.name=post-service
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:${random.uuid}